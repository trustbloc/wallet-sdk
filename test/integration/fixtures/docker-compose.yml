#
# Copyright Avast Software. All Rights Reserved.
# Copyright Gen Digital Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2.4'

services:
  vc-rest-echo.trustbloc.local:
    container_name: vc-rest-echo.trustbloc.local
    image: ${VC_REST_IMAGE}:${VC_REST_IMAGE_TAG}
    environment:
      - VC_REST_HOST_URL=0.0.0.0:8075
      - VC_REST_API_GATEWAY_URL=http://localhost:8075
      - VC_REST_HOST_URL_EXTERNAL=http://vc-rest-echo.trustbloc.local:8075
      - VC_REST_PROFILES_FILE_PATH=/profile/profiles.json
      - VC_REST_ORB_DOMAIN=testnet.orb.local
      - DATABASE_TYPE=mongodb
      - DATABASE_URL=mongodb://mongodb.example.com:27017
      - DATABASE_PREFIX=vc_rest_echo_
      - VC_REST_DEFAULT_KMS_TYPE=local
      - VC_REST_DEFAULT_KMS_SECRET_LOCK_KEY_PATH=/etc/tls/secret-lock.key
      - VC_REST_DEFAULT_KMS_SECRETS_DATABASE_TYPE=mongodb
      - VC_REST_DEFAULT_KMS_SECRETS_DATABASE_URL=mongodb://mongodb.example.com:27017
      - VC_REST_DEFAULT_KMS_SECRETS_DATABASE_PREFIX=vc_rest_kms_
      - VC_REST_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - VC_REST_TLS_SYSTEMCERTPOOL=true
      - VC_REST_API_TOKEN=rw_token
      - VC_REST_REQUEST_TOKENS=csl=rw_token
      - VC_REST_CONTEXT_PROVIDER_URL=${CONTEXT_PROVIDER_URL}
      - VC_REST_DEV_MODE=true
      - VC_OAUTH_SECRET=secret-for-signing-and-verifying-signatures
      - VC_METRICS_PROVIDER_NAME=prometheus
      - VC_PROM_HTTP_URL=vc-rest-echo.trustbloc.local:48127
      - VC_OAUTH_CLIENTS_FILE_PATH=/oauth-clients/clients.json
      - OTEL_EXPORTER_TYPE=JAEGER
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger.example.com:4318
      - VC_REST_DATA_ENCRYPTION_DISABLED=true
      - VC_REST_DATA_ENCRYPTION_KEY_ID=invalid
      - VC_TRANSIENT_DATA_STORE_TYPE=redis
      - VC_REDIS_URL=redis.example.com:6379
      - VC_REDIS_DISABLE_TLS=true
      - VC_OIDC4CI_TRANSACTION_DATA_TTL=5h
      - VC_OIDC4VP_NONCE_DATA_TTL=5h
    ports:
      - "8075:8075"
      - "48127:48127"
    depends_on:
      - did-resolver.trustbloc.local
    entrypoint: ""
    command: /bin/sh -c "sleep 10;vc-rest start"
    volumes:
      - ./keys/tls:/etc/tls
      - ./profile:/profile/
      - ./oauth-clients:/oauth-clients/
      - ./nginx-config/data:/request-objects
    networks:
      - bdd_net

  vcs.webhook.example.com:
    container_name: vcs.webhook.example.com
    image: wallet-sdk/sample-webhook:latest
    environment:
      - WEBHOOK_PORT=8180
    ports:
      - 8180:8180
    networks:
      - bdd_net

  did-resolver.trustbloc.local:
    container_name: did-resolver.trustbloc.local
    image: ${DID_RESOLVER_IMAGE}:${DID_RESOLVER_IMAGE_TAG}
    environment:
      - DID_REST_HOST_URL=${DID_RESOLVER_HOST}:${DID_RESOLVER_PORT}
      - DID_REST_HOST_URL_EXTERNAL=http://did-resolver.trustbloc.local:${DID_RESOLVER_PORT}
      - DID_REST_CONFIG_FILE=/opt/did-resolver/config.json
      - DID_REST_TLS_SYSTEMCERTPOOL=true
      - DID_REST_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - DID_REST_DID_DOMAIN=testnet.orb.local
    ports:
      - ${DID_RESOLVER_PORT}:${DID_RESOLVER_PORT}
    command: start
    volumes:
      - ./keys/tls:/etc/tls
      - ./did-resolver/config.json:/opt/did-resolver/config.json
    networks:
      - bdd_net

  mongodb.example.com:
    container_name: mongodb.example.com
    image: ${MONGODB_IMAGE}:${MONGODB_IMAGE_TAG}
    ports:
      - ${MONGODB_PORT}:${MONGODB_PORT}
    networks:
      - bdd_net

  redis.example.com:
    container_name: redis.example.com
    image: redis:alpine3.17
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379/tcp"
    networks:
      - bdd_net

  file-server.trustbloc.local: # file server for hosting static resources (e.g. JSON-LD contexts)
    container_name: file-server.trustbloc.local
    image: halverneus/static-file-server:latest
    environment:
      - PORT=10096
      - FOLDER=/data
      - TLS_CERT=/etc/tls/ec-pubCert.pem
      - TLS_KEY=/etc/tls/ec-key.pem
    ports:
      - "10096:10096"
    volumes:
      - ./file-server:/data
      - ./keys/tls:/etc/tls
    networks:
      - bdd_net

  jaeger.example.com:
    container_name: jaeger.example.com
    image: jaegertracing/all-in-one:1.62.0
    ports:
      - "16686:16686" # UI
      - "4317:4317"
      - "4318:4318"
    networks:
      - bdd_net

  api-gateway.trustbloc.local:
    container_name: api-gateway.trustbloc.local
    image: devopsfaith/krakend:${KRAKEND_IMAGE_TAG}
    ports:
      - "5566:8080"
    command: run -d -c /etc/krakend/krakend.tmpl
    environment:
      - FC_ENABLE=1
      - FC_SETTINGS=/etc/krakend/settings
      - FC_PARTIALS=/etc/krakend/partials
    volumes:
      - ./krakend-config:/etc/krakend/
      - ./keys/tls:/etc/tls
    networks:
      - bdd_net

  cognito-mock.trustbloc.local:
    container_name: cognito-mock.trustbloc.local
    image: aholovko/cognito-local:${COGNITO_MOCK_IMAGE_TAG}
    ports:
      - "9229:9229"
    volumes:
      - ./cognito-config:/app/.cognito
    networks:
      - bdd_net
    dns:
      - 127.0.0.1

  mock-trust-registry.example.com:
    container_name: mock-trust-registry.example.com
    image: wallet-sdk/mock-trust-registry:latest
    environment:
      - LISTEN_ADDR=:8100
      - RULES_FILE_PATH=/trust-registry/rules.json
      - TLS_CERT_PATH=/etc/tls/ec-pubCert.pem
      - TLS_KEY_PATH=/etc/tls/ec-key.pem
      - ROOT_CA_CERTS_PATH=/etc/tls/ec-cacert.pem
    ports:
      - "8100:8100"
    volumes:
      - ./keys/tls:/etc/tls
      - ./trust-registry:/trust-registry
    networks:
      - bdd_net

  mock-attestation.trustbloc.local: # mock for Attestation Service
    container_name: mock-attestation.trustbloc.local
    image: wallet-sdk/mock-attestation:latest
    environment:
      - LISTEN_ADDR=:8097
      - TLS_CERT_PATH=/etc/tls/ec-pubCert.pem
      - TLS_KEY_PATH=/etc/tls/ec-key.pem
      - ROOT_CA_CERTS_PATH=/etc/tls/ec-cacert.pem
      - ATTESTATION_PROFILE=drivers_license_issuer
    ports:
      - "8097:8097"
    volumes:
      - ./keys/tls:/etc/tls
    networks:
      - bdd_net

  mock-login-consent.example.com: # login/consent mock server for OIDC4CI issuance flow
    container_name: mock-login-consent.example.com
    image: wallet-sdk/mock-login-consent:latest
    environment:
      - LISTEN_ADDR=:8099
      - HYDRA_ADMIN_URL=Unused # mock-login-consent has a hard check for this param, should be refactored to be optional
      - TLS_CERT_PATH=/etc/tls/ec-pubCert.pem
      - TLS_KEY_PATH=/etc/tls/ec-key.pem
      - ROOT_CA_CERTS_PATH=/etc/tls/ec-cacert.pem
    ports:
      - "8099:8099"
    volumes:
      - ./keys/tls:/etc/tls
    networks:
      - bdd_net

networks:
  bdd_net:
    driver: bridge
